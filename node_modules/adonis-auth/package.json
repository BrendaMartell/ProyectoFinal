{
  "_args": [
    [
      {
        "raw": "adonis-auth@^1.0.5",
        "scope": null,
        "escapedName": "adonis-auth",
        "name": "adonis-auth",
        "rawSpec": "^1.0.5",
        "spec": ">=1.0.5 <2.0.0",
        "type": "range"
      },
      "/home/brenda/Proyecto_PedidosReservaciones"
    ]
  ],
  "_from": "adonis-auth@>=1.0.5 <2.0.0",
  "_id": "adonis-auth@1.0.7",
  "_inCache": true,
  "_location": "/adonis-auth",
  "_nodeVersion": "7.2.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/adonis-auth-1.0.7.tgz_1490610425420_0.5510013101156801"
  },
  "_npmUser": {
    "name": "adonisjs",
    "email": "virk@adonisjs.com"
  },
  "_npmVersion": "3.10.9",
  "_phantomChildren": {},
  "_requested": {
    "raw": "adonis-auth@^1.0.5",
    "scope": null,
    "escapedName": "adonis-auth",
    "name": "adonis-auth",
    "rawSpec": "^1.0.5",
    "spec": ">=1.0.5 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/adonis-auth/-/adonis-auth-1.0.7.tgz",
  "_shasum": "41eb7c74f6fd9240a1ea5d9593f385130add1a21",
  "_shrinkwrap": null,
  "_spec": "adonis-auth@^1.0.5",
  "_where": "/home/brenda/Proyecto_PedidosReservaciones",
  "author": {
    "name": "adonisjs"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "dependencies": {
    "basic-auth": "^1.1.0",
    "cat-log": "^1.0.2",
    "co-functional": "^0.2.1",
    "harmony-reflect": "^1.5.1",
    "jsonwebtoken": "^7.3.0",
    "ms": "^0.7.2",
    "node-exceptions": "^1.0.3",
    "uuid": "^3.0.1"
  },
  "description": "Offical authentication provider for Adonis framework",
  "devDependencies": {
    "adonis-fold": "^3.0.3",
    "chai": "^3.5.0",
    "co": "^4.6.0",
    "co-mocha": "^1.2.0",
    "coveralls": "^2.11.16",
    "cz-conventional-changelog": "^2.0.0",
    "istanbul": "^0.4.5",
    "mocha": "^3.2.0",
    "semver": "^5.3.0",
    "shelljs": "^0.7.6",
    "sinon-es6": "0.0.3",
    "standard": "^8.6.0",
    "supertest": "^3.0.0"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "shasum": "41eb7c74f6fd9240a1ea5d9593f385130add1a21",
    "tarball": "https://registry.npmjs.org/adonis-auth/-/adonis-auth-1.0.7.tgz"
  },
  "gitHead": "02f7b42cc43e8c2a05bd9b01d779e77c729dcde3",
  "keywords": [
    "adonis",
    "adonis-framework",
    "adonis-auth",
    "authentication"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "adonisjs",
      "email": "virk@adonisjs.com"
    }
  ],
  "name": "adonis-auth",
  "optionalDependencies": {},
  "readme": "<p align=\"center\">\n  <a href=\"http://adonisjs.com\"><img src=\"https://cloud.githubusercontent.com/assets/2793951/21462223/c147cefe-c959-11e6-80db-36709c766f17.png\" alt=\"AdonisJs Auth\"></a>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/adonis-auth\"><img src=\"https://img.shields.io/npm/v/adonis-auth.svg?style=flat-square\" alt=\"Version\"></a>\n  <a href=\"https://travis-ci.org/adonisjs/adonis-auth\"><img src=\"https://img.shields.io/travis/adonisjs/adonis-auth/master.svg?style=flat-square\" alt=\"Build Status\"></a>\n  <a href=\"https://coveralls.io/github/adonisjs/adonis-auth?branch=master\"><img src=\"https://img.shields.io/coveralls/adonisjs/adonis-auth/master.svg?style=flat-square\" alt=\"Coverage Status\"></a>\n  <a href=\"https://www.npmjs.com/package/adonis-auth\"><img src=\"https://img.shields.io/npm/dt/adonis-auth.svg?style=flat-square\" alt=\"Downloads\"></a>\n  <a href=\"https://opensource.org/licenses/MIT\"><img src=\"https://img.shields.io/npm/l/adonis-auth.svg?style=flat-square\" alt=\"License\"></a>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://gitter.im/adonisjs/adonis-framework\"><img src=\"https://img.shields.io/badge/gitter-join%20us-1DCE73.svg?style=flat-square\" alt=\"Gitter\"></a>\n  <a href=\"https://trello.com/b/yzpqCgdl/adonis-for-humans\"><img src=\"https://img.shields.io/badge/trello-roadmap-89609E.svg?style=flat-square\" alt=\"Trello\"></a>\n  <a href=\"https://www.patreon.com/adonisframework\"><img src=\"https://img.shields.io/badge/patreon-support%20AdonisJs-brightgreen.svg?style=flat-square\" alt=\"Support AdonisJs\"></a>\n</p>\n\n<br>\n\nAdonisJs Auth is a fully featured authentication system for AdonisJs framework.<br>\nIt supports by default multiple authentication schemes to authenticate HTTP requests.\n\n1. Sessions\n2. Basic-Auth\n3. JSON Web Token\n4. API Token\n\nIn order to verify users credentials, it makes use of Serializers and below serializers are shipped with this library.\n\n1. Lucid\n2. Database Provider\n\nYou are free to add your own schemes and serializers and documentation for same is written [on the official website](http://adonisjs.com/docs/3.2/authentication#_serializer).\n\n<br>\n<hr>\n<br>\n\n## Table of Contents\n\n* [Config](#config)\n* [Setup](#setup)\n* [Team Members](#team-members)\n* [Contribution Guidelines](#contribution-guidelines)\n\n<br>\n## <a name=\"config\"></a>Config\n\nConfiguration settings are slightly different for each scheme. When you define settings, we call them authenticators.\n \nIn short, an authenticator is a combination of `scheme`, `serializer` and common settings around them.\n\n### Example\n\n```javascript\n// config/auth.js\n{\n  authenticator: 'session',\n\n  session: {\n    // ...\n  }\n}\n```\n\n\n#### Session\n\n```javascript\nsession: {\n  serializer: 'Lucid',\n  scheme: 'session',\n  model: 'App/Model/User',\n  uid: 'email',\n  password: 'password'\n}\n```\n\n#### Basic Auth\n\n```javascript\nbasicAuth: {\n  serializer: 'Lucid',\n  scheme: 'basic',\n  model: 'App/Model/User',\n  uid: 'email',\n  password: 'password'\n}\n```\n\n#### JSON Web Token\n\n```javascript\njwt: {\n  serializer: 'Lucid',\n  scheme: 'jwt',\n  model: 'App/Model/User',\n  secret: Config.get('app.appKey')\n}\n```\n\n#### API Token\n\nPersonal api tokens are like passwords for a given account. Majority of API's needs API based authentication because:\n\n1. Their customers developers want to use the API in order to build something.\n2. Sharing account details with the developer is never secure, so instead they can generate a token\nand give it to the developer for testing.\n\n```javascript\n{\n  serializer: 'Lucid',\n  scheme: 'api',\n  model: 'App/Model/Token',\n  expiry: '30d'\n}\n```\n\nAlso you need to create the relationship between the user and the token, so that the Lucid serializer can make use of it.\n\n```javascript\n// app/Model/User.js\nclass User extends Lucid {\n\n  apiTokens () {\n    return this.hasMany('App/Model/Token')\n  }\n\n}\n```\n\n```javascript\n// app/Model/Token.js\nclass Token extends Lucid {\n\n  user () {\n    return this.belongsTo('App/Model/User')\n  }\n\n}\n```\n\n<br>\n## <a name=\"setup\"></a>Setup\n\nIn order to make use of the Auth provider, you need to register it inside your `bootstrap/app.js` file.\n\n### Required Setup\n\n```javascript\nconst providers = [\n  ...,\n  'adonis-auth/providers/AuthManagerProvider'\n]\n```\n\nNext you need to register the `AuthInit` middleware. This middleware will create a new instance of Auth Manager and will assign it to the request object.\n\n```javascript\n// app/Http/kernel.js\nconst globalMiddleware = [\n  ...,\n  'Adonis/Middleware/AuthInit'\n]\n```\nand you are good to go. From here you can make use of `request.auth` to authenticate/login your users.\n\n### Usage\n\n```javascript\n// find if a user is logged in\nyield request.auth.check()\n\n// attempt to login a user\nyield request.auth.attempt('email', 'password')\n\n// login using user object\nyield request.auth.login(user)\nyield request.auth.loginViaId(1)\nyield request.auth.logout()\n```\n\n### Automatic Authentication\n\nAuth provider also ships with an extra middleware, which can be assigned to your routes to authenticate them.\n\n```javascript\n// app/Http/kernel.js\nconst namedMiddleware = {\n  auth: 'Adonis/Middleware/Auth'\n}\n```\n\nand then inside your routes file you can do.\n\n#### Using default authenticator\n```javascript\nRoute\n  .get('account', 'AccountsController.index')\n  .middleware('auth')\n```\n\n#### Defining authenticator\n```javascript\nRoute\n  .get('account', 'AccountsController.index')\n  .middleware('auth:basic')\n```\n\n<br>\n## <a name=\"team-members\"></a>Team Members\n\n* Harminder Virk ([Caffiene Blogging](http://amanvirk.me/)) <virk.officials@gmail.com>\n\n<br>\n## <a name=\"contribution-guidelines\"></a>Contribution Guidelines\n\nIn favor of active development we accept contributions for everyone. You can contribute by submitting a bug, creating pull requests or even improving documentation.\n\nYou can find a complete guide to be followed strictly before submitting your pull requests in the [Official Documentation](http://adonisjs.com/docs/2.0/contributing).\n",
  "readmeFilename": "README.md",
  "scripts": {
    "coverage": "npm run lint && node bin/coverage.js",
    "lint": "standard",
    "test": "npm run lint && FORCE_COLOR=true node bin/test.js"
  },
  "version": "1.0.7"
}
